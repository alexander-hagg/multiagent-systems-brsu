%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Short Sectioned Assignment
% LaTeX Template
% Version 1.0 (5/5/12)
%
% This template has been downloaded from:
% http://www.LaTeXTemplates.com
%
% Original author:
% Frits Wenneker (http://www.howtotex.com)
%
% License:
% CC BY-NC-SA 3.0 (http://creativecommons.org/licenses/by-nc-sa/3.0/)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%----------------------------------------------------------------------------------------
%	PACKAGES AND OTHER DOCUMENT CONFIGURATIONS
%----------------------------------------------------------------------------------------

\documentclass[paper=a4, fontsize=11pt]{scrartcl} % A4 paper and 11pt font size

\usepackage[T1]{fontenc} % Use 8-bit encoding that has 256 glyphs
%\usepackage{fourier} % Use the Adobe Utopia font for the document - comment this line to return to the LaTeX default
\usepackage[english]{babel} % English language/hyphenation
\usepackage{amsmath,amsfonts,amsthm} % Math packages
\usepackage{enumerate}
\usepackage{scrextend}
%\usepackage{algorithm}

%\usepackage{algorithmic}
%\usepackage{algorithm2e}
\usepackage{float}

\restylefloat{figure}

\usepackage[pdftex]{graphicx}
\graphicspath{{\img}}
\DeclareGraphicsExtensions{.jpg}


%\usepackage{lipsum} % Used for inserting dummy 'Lorem ipsum' text into the template

\usepackage{sectsty} % Allows customizing section commands
\allsectionsfont{\centering \normalfont\scshape} % Make all sections centered, the default font and small caps

\usepackage{fancyhdr} % Custom headers and footers
\pagestyle{fancyplain} % Makes all pages in the document conform to the custom headers and footers
\fancyhead{} % No page header - if you want one, create it in the same way as the footers below
\fancyfoot[L]{} % Empty left footer
\fancyfoot[C]{} % Empty center footer
\fancyfoot[R]{\thepage} % Page numbering for right footer
\renewcommand{\headrulewidth}{0pt} % Remove header underlines
\renewcommand{\footrulewidth}{0pt} % Remove footer underlines
\setlength{\headheight}{13.6pt} % Customize the height of the header

\numberwithin{equation}{section} % Number equations within sections (i.e. 1.1, 1.2, 2.1, 2.2 instead of 1, 2, 3, 4)
\numberwithin{figure}{section} % Number figures within sections (i.e. 1.1, 1.2, 2.1, 2.2 instead of 1, 2, 3, 4)
\numberwithin{table}{section} % Number tables within sections (i.e. 1.1, 1.2, 2.1, 2.2 instead of 1, 2, 3, 4)

\setlength\parindent{5pt} % Removes all indentation from paragraphs - comment this line for an assignment with lots of text

%----------------------------------------------------------------------------------------
%	TITLE SECTION
%----------------------------------------------------------------------------------------

\newcommand{\horrule}[1]{\rule{\linewidth}{#1}} % Create horizontal rule command with 1 argument of height

\title{	
\normalfont \normalsize 
\textsc{Hochschule Bonn-Rhein-Sieg, Autonomous Systems} \\ [25pt] % Your university, school and/or department name(s)
\horrule{0.5pt} \\[0.4cm] % Thin top horizontal rule
\huge Multi Agent Systems Exercise Sheet 1\\ % The assignment title
\horrule{2pt} \\[0.5cm] % Thick bottom horizontal rule
}

\author{Alexander Hagg, Obada Alaqtash} % Your name

\date{\normalsize\today} % Today's date or a custom date

\begin{document}

\maketitle % Print the title


\section{Exercise 2}

\subsection{Introduction}

As part of the course in Multi Agent Systems of the BRSU University, an agent network is developed to solve the problem of 
job scheduling using agents as functional units. Later on this dynamic environment will allow a system to be rapidly reconfigurable 
and offer a degree of adaptivity needed in robotics as well as many other areas in computer science.

Jade offers a development and runtime framework enabling quick development of multiagent systems within the Java framework. 
Development was done using the Eclipse IDE, which enables the integration of the Jade library. Github is used as a versioning 
and cooperation tool.

\subsection{Structure}

Three agents were developed:

\begin{itemize}
 \item JobSupplierAgent, supplying a set of jobs and durations to the scheduler. Multiple job suppliers could be running on 
 multiple systems, but for now just one agent is instantiated.
 \item SchedulerAgent, using a simple scheduling algorithm (ordering by ascending duration). The scheduler initiates a small 
 conversation with the job supplier asking for a list of jobs.
 \item SchedulingVisualizerAgent. It asks the scheduler to send the current schedule and presents a Java Swing GUI representing 
 schedule in a Gantt diagram.
\end{itemize}

Other classes:
\begin{itemize}
 \item Job class, wrapping jobs as objects (with a name and a duration). This class might be redundant but it implements the Jade Leap 
 Serializable interface that allows the ArrayList<Job> joblist to be sorted.
 \item SchedulingVisualizerGui class, containing the Java Swing elements.
 \item myReceiver class, containing a behaviour for receiving messages. This class will be removed later on as Jade already 
 offers lots of standard behaviours that allow this functionality.
 \item RunJade class, containing the main() method that initiates the entire system. Rather than running the system from the command line, 
 this class enables multiplatform compatibility.
\end{itemize}


\subsection{Communication}

The JobSupplierAgent's setup contains the instantiation of a Jade CyclicBehaviour that will run forever. The behaviour contains a 
call to the block() method. As such, the action() method will always be called on a new event (such as reception of a message 
from another agent). The behaviour reads the contents of the message and checks whether the type is ``QUERY\_REF'', which is a 
Jade constant representing a query message. After this it will check whether the query message contains the ``joblist'' string, which ensures 
that the agent received a query asking for the job list. Now it will create a reply message containing the ArrayList<Job> of jobs.

The SchedulerAgent 

\subsection{Test results}

\begin{figure}[h]
 \centering
 \includegraphics[width=400pt]{../02_Ex_Hagg_Alaqtash/02_Ex_Hagg_Alaqtash_visual_output_1.png}
 % 02_Ex_Hagg_Alaqtash visual_output 1.png: 807x157 pixel, 72dpi, 28.47x5.54 cm, bb=0 0 807 157
 \caption{Output of the first joblist dataset}
\end{figure}


\begin{figure}[h]
 \centering
 \includegraphics[width=400pt]{../02_Ex_Hagg_Alaqtash/02_Ex_Hagg_Alaqtash_visual_output_2.png}
 % 02_Ex_Hagg_Alaqtash visual_output 1.png: 807x157 pixel, 72dpi, 28.47x5.54 cm, bb=0 0 807 157
 \caption{Output of the second joblist dataset}
\end{figure}

\begin{figure}[h]
 \centering
 \includegraphics[width=400pt]{../02_Ex_Hagg_Alaqtash/02_Ex_Hagg_Alaqtash_visual_output_3.png}
 % 02_Ex_Hagg_Alaqtash visual_output 1.png: 807x157 pixel, 72dpi, 28.47x5.54 cm, bb=0 0 807 157
 \caption{Output of the third joblist dataset}
\end{figure}

\subsection{Bugs and things to do}

schedule (which was implemented in a non-standard way, this will be corrected)
\end{document}